version: '3.3'

volumes:

  pg_data:
  static:
  media:

services:

  db:
    container_name: foodgram-db
    image: postgres:13.10
    env_file: .env
    restart: on-failure
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 5s
      timeout: 10s
      retries: 12
    volumes:
      - pg_data:/var/lib/postgresql/data

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
        restart: true
    ports:
      - "8077:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/staticfiles/
      - media:/media/

  frontend:
    container_name: foodgram-front
    image: levisserena/foodgram_frontend:latest
    env_file: .env
    command: cp -r /app/build/. /result_build/
    depends_on:
      - nginx
    volumes:
      - static:/result_build

  backend:
    container_name: foodgram-backend
    image: levisserena/foodgram_backend:latest
    env_file: .env
    depends_on:
      - nginx
    volumes:
      - static:/static
      - media:/media
